CREATE DATABASE IFPR_BIBLIOTECA;

use IFPR_BIBLIOTECA;

CREATE TABLE BOOKS(
    ID INT PRIMARY KEY,
    TITULO VARCHAR(50),
    AUTOR VARCHAR(50),
    ANO INT,
    QRCODE VARCHAR(500),
    LOCALIZACAO VARCHAR(150),
    STATUS CHAR(1)
);

INSERT INTO BOOKS 
       (TITULO, AUTOR, ANO, QRCODE, LOCALIZACAO, STATUS) 
VALUES(?, ?, ?, ?, ?, ?);


UPDATE BOOKS SET TITULO = ?
                 AUTOR  = ?,
                 ANO    = ?,
                 QRCODE = ?,
                 LOCALIZACAO = ?,
                 STATUS = ?
 WHERE ID = ?;


 CREATE TABLE USUARIO(
    ID_USUARIO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOME_USUARIO VARCHAR(100) NOT NULL,
    SENHA_USUARIO VARCHAR(100) NOT NULL,
    EMAIL_USUARIO VARCHAR(100) NOT NULL,
    DATANASCIMENTO_USUARIO DATE NOT NULL,
    IDADE_USUARIO INT NOT NULL,
    ENDERECO_USUARIO VARCHAR(150)
);                   


CREATE TABLE EMPRESTADO(
    ID_EMPRESTADO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_LIVRO INT DEFAULT 0,
    ID_USUARIO INT DEFAULT 0,
    DATA_EMPRESTADO DATE NOT NULL,
    DATA_DEVOLUCAO_EMPRESTADO DATE NOT NULL,
    STATUS_EMPRESTIMO ENUM('EMPRESTADO','DEVOLVIDO') DEFAULT 'EMPRESTADO',
    FOREIGN KEY (ID_LIVRO) REFERENCES BOOKS(ID),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);


// Quantos livros foram pegos por usuario
SELECT 
    USER.ID_USUARIO,
    USER.NOME_USUARIO,
     BOOK.TITULO,
    EMPRESTADO.DATA_EMPRESTADO,
    EMPRESTADO.DATA_DEVOLUCAO_EMPRESTADO, 
    COUNT(EMPRESTADO.ID_USUARIO) AS TOTAL_EMPRESTIMOS
FROM EMPRESTADO
LEFT JOIN BOOKS AS BOOK 
    ON BOOK.ID = EMPRESTADO.ID_LIVRO
LEFT JOIN USUARIO AS USER 
    ON USER.ID_USUARIO = EMPRESTADO.ID_USUARIO
GROUP BY BOOK.TITULO
HAVING COUNT(EMPRESTADO.ID_USUARIO) > 0;

// quem mais leu durante esse mÃªs

SELECT 
    USER.ID_USUARIO,
    USER.NOME_USUARIO,
    COUNT(EMPRESTADO.ID_LIVRO) AS TOTAL_LIDOS
FROM EMPRESTADO
LEFT JOIN USUARIO AS USER 
    ON USER.ID_USUARIO = EMPRESTADO.ID_USUARIO
WHERE MONTH(EMPRESTADO.DATA_EMPRESTADO) = 8
  AND YEAR(EMPRESTADO.DATA_EMPRESTADO) = 2025
GROUP BY USER.ID_USUARIO, USER.NOME_USUARIO
ORDER BY TOTAL_LIDOS DESC
LIMIT 1;


ALTER TABLE EMPRESTADO ADD COLUMN ID_LOCALIZACAO INT;

CREATE TABLE LOCALIZACAO_LIVRO(
    ID_LOCALIZACAO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    DESCRICAO_LOCALIZACAO VARCHAR(200) NOT NULL,
    FOTO_LOCALIZACAO VARCHAR(500) NOT NULL
);

CREATE TABLE CATEGORIA_LIVRO(
    ID_CATEGORIA_LIVRO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    DESCRICAO_CATEGORIA VARCHAR(200) NOT NULL,
    ATIVO_CATEGORIA BOOLEAN DEFAULT FALSE
);